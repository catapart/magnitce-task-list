var l=`:host\r
{\r
    --border-color: rgb(95, 95, 95);\r
    display: inline-block;\r
    border: solid 1px var(--border-color);\r
    border-radius: 3px;\r
    padding: .5em;\r
}\r
@media (prefers-color-scheme: dark) \r
{\r
    :host\r
    {\r
        --border-color: rgb(71, 71, 71);\r
    }\r
}\r
\r
\r
[part="header"]\r
{\r
    display: grid;\r
    grid-template-columns: auto 1fr auto;\r
    align-items: stretch;\r
    position: sticky;\r
}\r
\r
[part="color-container"]\r
{\r
    display: contents;\r
}\r
\r
[part="color"]\r
{\r
    /* margin: .5em; */\r
    padding: 0;\r
    width: 12px;\r
    min-height: 0;\r
    height: auto;\r
    /* border-radius: 3px; */\r
    border: solid 1px transparent;\r
}\r
[part="color"]::-moz-color-swatch \r
{\r
    border: none;\r
    /* border-radius: 3px; */\r
    padding: 0;\r
    margin: 0;\r
}\r
\r
[part="color"]::-webkit-color-swatch-wrapper \r
{\r
    padding: 0;\r
    margin: 0;\r
}\r
\r
[part="color"]::-webkit-color-swatch \r
{\r
    border: none;\r
    /* border-radius: 3px; */\r
    padding: 0;\r
    margin: 0;\r
}\r
\r
[part="name"]\r
{\r
    /* margin: .5em 0; */\r
}\r
\r
[part="collapse-button"]\r
{\r
    /* margin: .5em; */\r
}\r
\r
[part="tasks"]\r
{\r
    list-style: none;\r
    margin: 0;\r
    padding: 0;\r
    display: flex;\r
    flex-direction: column;\r
    /* min-height: 350px; */\r
}\r
\r
[part="add-button"]\r
{\r
    margin-top: 1rem;\r
    min-width: 100px;\r
    align-self: center;\r
    display: flex;\r
    align-items: center;\r
    justify-content: center;\r
    gap: 5px;\r
}\r
\r
:host([collapsed]) > [part="tasks"]\r
{\r
    overflow: hidden;\r
    height: min-content;\r
}\r
:host([collapsed]) > [part="tasks"] ::slotted(*)\r
{\r
    height: 0;\r
    opacity: 0;\r
    display: block;\r
    white-space: nowrap;\r
    padding: 0;\r
    margin: 0;\r
    border: none;\r
    pointer-events: none;\r
    user-select: none;\r
}\r
\r
::slotted([data-drag-id])\r
{\r
    opacity: .7;\r
    scale: .97;\r
    transition: opacity 100ms ease, scale 100ms ease;\r
}`;var d=`<slot name="header">\r
    <header part="header">\r
        <label part="color-container" title="Color">\r
            <input type="color" part="color" value="#919191" />\r
        </label>\r
        <input type="text" part="name" placeholder="List Name" />\r
        <button type="button" part="collapse-button" title="Collapse">\u25B2</button>\r
    </header>\r
</slot>\r
<ul part="tasks">\r
    <slot></slot>\r
    <slot name="add-button"><button type="button" part="add-button" title="Add"><span part="icon">&plus;</span>Add Task</button></slot>\r
</ul>\r
<slot name="footer"></slot>`;var u=`:host
{
    --border-color: rgb(95, 95, 95);
    border: solid 1px var(--border-color);
    border-radius: 3px;
    padding: 0;
    margin: .25em;
    display: inline-flex;
}
@media (prefers-color-scheme: dark) 
{
    :host
    {
        --border-color: rgb(71, 71, 71);
    }
}

[part="color-container"]
{
    display: contents;
}

[part="color"]
{
    margin: 0;
    padding: 0;
    width: 7.5px;
    min-height: 0;
    height: auto;
    border: none;
}
[part="color"]::-moz-color-swatch 
{
    border: none;
    padding: 0;
    margin: 0;
}

[part="color"]::-webkit-color-swatch-wrapper 
{
    padding: 0;
    margin: 0;
}

[part="color"]::-webkit-color-swatch 
{
    border: none;
    padding: 0;
    margin: 0;
}

[part="is-finished"]
{
    margin: 1em .5em;
}


[part="is-finished"]:checked + slot [part="description"]
,[part="is-finished"]:checked + ::slotted([slot="description"])
{
    text-decoration: line-through;
}

[part="description"]
{
    /* user-agent input defaults */
    --input-border-color: rgb(118, 118, 118);

    min-height: 1.2em;
    min-width: 20ch;
    resize: both;
    background-color: field;
    color: fieldtext;
    border: solid 1px var(--input-border-color, fieldtext);
    padding: 3px 5px;
    font-size: 12px;
    font-family: sans-serif;
    display: block;
    border-radius: 2px;

}
@media (prefers-color-scheme: dark) 
{
    :host
    {
        /* user-agent input defaults */
        --input-border-color: rgb(133, 133, 133);
    }
}

[part="description"]
,::slotted([slot="description"])
{
    margin: 1em .5em 1em 0;
    flex: 1;
}

[part="remove-button"]
{
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin:1em .5em 1em 0;
}
[part="remove-icon"]
{
    width: var(--icon-width, var(--icon-size, 12px));
    height: var(--icon-height, var(--icon-size, 12px));
}`,g=`<slot name="handle">
    <span part="handle"></span>
</slot>
<span part="color-container">
    <input type="color" part="color" value="#919191" />
</span>
<input type="checkbox" part="is-finished" title="Finished?" />
<slot name="description"><div part="description" contenteditable="true"></div></slot>
<button type="button" part="remove-button" title="Delete">
    <slot name="remove-button-label">
        <svg part="remove-icon" class="icon close-cross" viewBox="0 0 22.812714 22.814663" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg">
            <path
            style="display:inline;fill:var(--icon-primary-color,InfoText);fill-opacity:1;stroke:var(--icon-secondary-color,InfoBackground);stroke-width:1;stroke-linecap:round;stroke-dasharray:none;stroke-opacity:1"
            d="m 3.8656768,2.2287478 a 1.6392814,1.6392814 0 0 0 -1.15929,0.48032 1.6392814,1.6392814 0 0 0 0,2.31816 l 6.38181,6.3818002 -6.38181,6.38182 a 1.6392814,1.6392814 0 0 0 0,2.31814 1.6392814,1.6392814 0 0 0 2.31816,0 l 6.3818102,-6.3818 6.38181,6.3818 a 1.6392814,1.6392814 0 0 0 2.31816,0 1.6392814,1.6392814 0 0 0 0,-2.31814 l -6.38182,-6.38182 6.38182,-6.3818002 a 1.6392814,1.6392814 0 0 0 0,-2.31816 1.6392814,1.6392814 0 0 0 -1.15929,-0.48032 1.6392814,1.6392814 0 0 0 -1.15887,0.48032 l -6.38181,6.38181 -6.3818102,-6.38181 a 1.6392814,1.6392814 0 0 0 -1.15887,-0.48032 z" />
        </svg>
    </slot>
</button>`;var c=new CSSStyleSheet;c.replaceSync(u);var r="task-card",b=class extends HTMLElement{componentParts=new Map;getPart(o){if(this.componentParts.get(o)==null){let e=this.shadowRoot.querySelector(`[part="${o}"]`);e!=null&&this.componentParts.set(o,e)}return this.componentParts.get(o)}findPart(o){return this.shadowRoot.querySelector(`[part="${o}"]`)}get value(){return this.findPart("description").textContent}#t=null;constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=g,this.shadowRoot.adoptedStyleSheets.push(c),this.findPart("color").addEventListener("change",o=>{this.dispatchEvent(new CustomEvent("change",{detail:{target:o.target}}))}),this.findPart("is-finished").addEventListener("change",o=>{this.dispatchEvent(new CustomEvent("change",{detail:{target:o.target}}))}),this.findPart("description").addEventListener("blur",o=>{this.value!=this.#t&&this.dispatchEvent(new CustomEvent("change",{detail:{target:o.target}})),this.#t=this.value}),this.findPart("remove-button").addEventListener("click",()=>{this.dispatchEvent(new CustomEvent("remove"))})}static create(o){let e=document.createElement(r);if(o==null)return e;for(let[t,n]of Object.entries(o))if(t=="value"||t=="placeholder"||t=="color")e.setAttribute(t,n);else if(t.startsWith("on")){let s=t.substring(2).toLowerCase();e.addEventListener(s,n)}return e}static observedAttributes=["value","description","color","is-finished"];attributeChangedCallback(o,e,t){o=="value"||o=="description"?this.findPart("description").textContent=t:o=="is-finished"?this.findPart("is-finished").checked=t=="true":o=="color"&&(this.findPart("color").value=t)}};customElements.get(r)==null&&customElements.define(r,b);var p=new CSSStyleSheet;p.replaceSync(l);var f=(n=>(n.Change="change",n.Add="add",n.Collapse="collapse",n))(f||{}),i="task-list",a=class extends HTMLElement{componentParts=new Map;getPart(e){if(this.componentParts.get(e)==null){let t=this.shadowRoot.querySelector(`[part="${e}"]`);t!=null&&this.componentParts.set(e,t)}return this.componentParts.get(e)}findPart(e){return this.shadowRoot.querySelector(`[part="${e}"]`)}handledItems=new WeakSet;constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=d,this.shadowRoot.adoptedStyleSheets.push(p),this.findPart("name").addEventListener("change",e=>{this.dispatchEvent(new CustomEvent("change",{detail:{target:e.target}}))}),this.findPart("color").addEventListener("change",e=>{this.dispatchEvent(new CustomEvent("change",{detail:{target:e.target}}))}),this.findPart("collapse-button").addEventListener("click",()=>{this.toggleHidden()}),this.findPart("add-button").addEventListener("click",()=>{this.dispatchEvent(new CustomEvent("add",{bubbles:!0,detail:{order:this.childNodes.length,type:"request"}}))}),this.shadowRoot.querySelector("slot:not([name])").addEventListener("slotchange",e=>{let t=e.target.assignedElements();for(let n=0;n<t.length;n++)if(!this.handledItems.has(t[n])){if(this.getAttribute("drag-drop")!=null&&t[n].tagName.toLowerCase()==r.toLowerCase()){let s=t[n];s.draggable=!0,this.handledItems.add(t[n]);continue}t[n].tagName.toLowerCase()==i.toLowerCase()&&(this.dispatchEvent(new CustomEvent("nested",{bubbles:!0,detail:{target:t[n]}})),this.handledItems.add(t[n])),t[n].tagName.toLowerCase()==r.toLowerCase()&&(this.dispatchEvent(new CustomEvent("added",{bubbles:!0,detail:{order:this.childNodes.length,target:t[n]}})),this.handledItems.add(t[n]))}})}static create(e){let t=document.createElement(i);if(e==null)return t;for(let[n,s]of Object.entries(e))this.observedAttributes.indexOf(n)>-1?t.setAttribute(n,s):n=="items";return t}toggleHidden(){this.getAttribute("collapsed")==null?this.hide():this.show()}hide(){this.findPart("collapse-button").textContent="\u25BC",this.setAttribute("collapsed",""),this.dispatchEvent(new CustomEvent("collapse"))}show(){this.findPart("collapse-button").textContent="\u25B2",this.removeAttribute("collapsed"),this.dispatchEvent(new CustomEvent("collapse"))}static observedAttributes=["name","description","color","collapsed"];attributeChangedCallback(e,t,n){e=="name"?this.findPart("name").value=n:e=="description"?this.findPart("header").title=n:e=="color"?this.findPart("color").value=n:e=="collapsed"&&(n==="true"?this.classList.add("collapsed"):this.classList.remove("collapsed"))}};customElements.get(i)==null&&customElements.define(i,a);export{i as COMPONENT_TAG_NAME,a as TaskListElement,f as TaskListEvents};
